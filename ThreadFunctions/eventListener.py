from lib.nextion import nextionfrom ThreadFunctions.schedule import *from ThreadFunctions.server import *from ThreadFunctions.DirectLaunch import *import timeimport ctypesimport _threaddef startEventListener():  print("EVENTLISTENER STARTED")  display = nextion(12, 13, 9600) # Display-Objekt definieren  while 1:    displayResponse = display.read(display.DECODE) # UART auslesen    if(displayResponse is None): # Wenn kein Event-Code gesendet wurde      time.sleep_ms(20)    else:      cmd = 0      displayResponse = str(displayResponse).replace("b'", "")      displayResponse = str(displayResponse).replace("'", "")      if(str(displayResponse)=="001"):          cmd = 1          print("Received command for scheduled launch")          schedule()      if(str(displayResponse)=="002"):          cmd = 1          print("Received command for wifi connect")          _thread.start_new_thread(connect, ())      if(str(displayResponse)=="003"):          cmd = 1          print("MANUAL LAUNCH")          _thread.start_new_thread(man_launch, ())      if(str(displayResponse)=="004"):          cmd = 1          print("Server start, wifi on")          _thread.start_new_thread(start_server, ())      if(cmd==0):          print(str(displayResponse))    